buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.1'
		classpath 'org.robovm:robovm-gradle-plugin:1.8.0'
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"
    //apply from : 'publish.gradle'

    ext {

        //------Libgdx configs-------//
        gdxVersion = '1.8.0'
        roboVMVersion = '1.8.0'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.7.0'
        //------Libgdx configs end-------//

        overlapRuntimeVersion = '0.1.2-SNAPSHOT'
        flurryVersion = '6.2.0'

        //-------BasicSamples----------//
        android_compile_version = 23
        android_version = '23.0.2'
        android_min_sdk_version = 9

        if (!project.hasProperty('appcompat_library_version')) {
            appcompat_library_version = '20.0.+'
        }
        if (!project.hasProperty('support_library_version')) {
            support_library_version = '20.0.+'
        }
        if (!project.hasProperty('gms_library_version')) {
            gms_library_version = '8.4.0'
        }
        //-------End BasicSamples----------//

        //------Maven Configs------//
        GROUP_ID = 'com.underwaterapps.submarine' 
        def properties = project.getLocalProperties()
        if (!project.hasProperty('NEXUS_USERNAME')) {
            NEXUS_USERNAME = properties.getProperty('NEXUS_USERNAME')
        }

        if (!project.hasProperty('NEXUS_PASSWORD')) {
            NEXUS_PASSWORD = properties.getProperty('NEXUS_PASSWORD')
        }

        IS_RELEASE = false

        POM_URL = 'https://github.com/UnderwaterApps/submarine'

        POM_SCM_URL = 'scm:git@github.com:UnderwaterApps/submarine.git'
        POM_SCM_CONNECTION = 'scm:git@github.com:UnderwaterApps/submarine.git'
        POM_SCM_DEV_CONNECTION = 'scm:git@github.com:UnderwaterApps/submarine.git'
        //------Maven Configs END------//

        //-----All sub project versions----//
        ADCOLONY_VERSION = '1.0.0'
        ADMOB_VERSION = '1.0.0'
        BILLING_VERSION = '1.0.0'
        CORE_VERSION = '1.0.0'
        GAME_SERVICES_VERSION = '1.0.0'
        STATS_REPORTER_VERSION = '1.0.0'
        FLURRY_VERSION = '1.0.0'
        SUPERSONIC_VERSION = '1.0.0'

        if(!IS_RELEASE){
            ADCOLONY_VERSION += "-SNAPSHOT"
            ADMOB_VERSION += "-SNAPSHOT"
            BILLING_VERSION += "-SNAPSHOT"
            CORE_VERSION += "-SNAPSHOT"
            GAME_SERVICES_VERSION += "-SNAPSHOT"
            STATS_REPORTER_VERSION += "-SNAPSHOT"
            FLURRY_VERSION += "-SNAPSHOT"
            SUPERSONIC_VERSION += "-SNAPSHOT"
        }
        //-----All sub project versions end----//
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

configure(subprojects.findAll {(it.name != 'BaseGameUtils' &&
                                (it.name == 'submarine-billing-android' || it.name == 'submarine-billing-desktop' || it.name == 'submarine-billing-ios'
                                || it.name == 'submarine-game-services-android' || it.name == 'submarine-game-services-desktop' || it.name == 'submarine-game-services-ios'
                                || it.name == 'submarine-admob-android' || it.name == 'submarine-admob-desktop' || it.name == 'submarine-admob-ios'
                                || it.name == 'submarine-flurry-android' || it.name == 'submarine-flurry-desktop' || it.name == 'submarine-flurry-ios'
                                || it.name == 'submarine-supersonic-android' || it.name == 'submarine-supersonic-desktop' || it.name == 'submarine-supersonic-ios'
                                || it.name == 'submarine-core'))}) {

    apply from : (rootProject.getRootDir().path+'/publish.gradle')
}

task uploadCoreArchives(dependsOn: ':submarine-core:uploadArchives'){
    println "Uploading Submarine Core Archives."
}

task uploadGameServicesArchives(dependsOn: [':submarine-game-services-android:uploadArchives', ':submarine-game-services-desktop:uploadArchives', ':submarine-game-services-ios:uploadArchives']){
    println "Uploading Submarine Game Services Archives."
}

task uploadBillingArchives(dependsOn: [':submarine-billing-android:uploadArchives', ':submarine-billing-desktop:uploadArchives', ':submarine-billing-ios:uploadArchives']){
    println "Uploading Submarine Billing Archives."
}

task uploadAdmobArchives(dependsOn: [':submarine-admob-android:uploadArchives', ':submarine-admob-desktop:uploadArchives', ':submarine-admob-ios:uploadArchives']){
    println "Uploading Submarine Admob Archives."
}

task uploadFlurryArchives(dependsOn: [':submarine-flurry-android:uploadArchives', ':submarine-flurry-desktop:uploadArchives', ':submarine-flurry-ios:uploadArchives']){
    println "Uploading Submarine Flurry Archives."
}

task uploadSuperSonicArchives(dependsOn: [':submarine-supersonic-android:uploadArchives', ':submarine-supersonic-desktop:uploadArchives', ':submarine-supersonic-ios:uploadArchives']){
    println "Uploading Submarine SuperSonic Archives."
}


tasks.eclipse.doLast {
    delete ".project"
}

def getLocalProperties() {
    def localProperties = project.file("local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        return properties
    } else {
        assert 'Plase add "local.properties" file into you root project and define \n' +
                '"sdk.dir",\n' +
                '"NEXUS_USERNAME",\n' +
                '"NEXUS_PASSWORD",\n' +
                'properties.'
    }

}
